#include "transaction_pool.h"

int main() {
    // Create a TransactionPool instance
    TransactionPool tx_pool;

    // Create some transactions (in a real-world case, these will be generated by clients)
    Transaction tx1("Alice", "Bob", 50, 1638561296, "signature1", {0x01, 0x02});
    Transaction tx2("Bob", "Charlie", 30, 1638561396, "signature2", {0x03, 0x04});
    Transaction tx3("Charlie", "Dave", 20, 1638561496, "signature3", {0x05, 0x06});

    // Insert transactions into the pool
    tx_pool.insertTransaction(tx1);
    tx_pool.insertTransaction(tx2);
    tx_pool.insertTransaction(tx3);

    // Select transactions for the next block (with a max block size of 1 KB for this example)
    std::vector<Transaction> block_transactions = tx_pool.selectTransactionsForBlock(1024);
    std::cout << "Selected " << block_transactions.size() << " transactions for the block" << std::endl;

    // Remove transactions that are now in the block
    for (const auto& tx : block_transactions) {
        tx_pool.removeTransaction(tx);
    }

    return 0;
}
